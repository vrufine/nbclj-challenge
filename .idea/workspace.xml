<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c0216f18-1922-4403-85bd-91a9701dcb43" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__cheshire_5_9_0.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__clj_time_0_14_3.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__com_fasterxml_jackson_core_jackson_core_2_9_9.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__com_fasterxml_jackson_dataformat_jackson_dataformat_cbor_2_9_9.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__com_fasterxml_jackson_dataformat_jackson_dataformat_smile_2_9_9.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__ring_ring_core_1_7_1.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__ring_ring_json_0_5_0.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__tigris_0_1_1.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/web/domains/api.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dictionaries/viniciusrufine.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dictionaries/viniciusrufine.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__clj_time_0_11_0.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__commons_io_2_5.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__commons_io_2_6.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__joda_time_2_8_2.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__joda_time_2_9_9.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__ring_ring_core_1_6_3.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project.clj" beforeDir="false" afterPath="$PROJECT_DIR$/project.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/web/core.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/web/core.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/web/domains/game.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/web/domains/game.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/web/domains/grid.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/web/domains/grid.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/web/domains/grid_test.clj" beforeDir="false" afterPath="$PROJECT_DIR$/test/web/domains/grid_test.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/web.iml" beforeDir="false" afterPath="$PROJECT_DIR$/web.iml" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FavoritesManager">
    <favorites_list name="web" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="ClojureScript Test Namespace" />
        <option value="Clojure Test Namespace" />
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MavenRunner">
    <option name="skipTests" value="true" />
  </component>
  <component name="ProjectId" id="1P4ytJ5ReqHxgFtTifQbKBJKsLn" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="cursive.last.file.extension./Users/viniciusrufine/dev/web/src" value="clj" />
    <property name="cursive.last.file.extension./Users/viniciusrufine/dev/web/test" value="clj" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="ReadonlyStatusHandler">
    <option name="SHOW_DIALOG" value="false" />
  </component>
  <component name="ReplState" timestamp="1566198675113">{:repl-history {:ide [], :local [{:command &quot;(-&gt; (get (seq [{:x 10} {'x 10} {'x 10}]) 0)\n    (println))&quot;, :offset 57, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (get (seq [{:x 10} {'x 10} {'x 10}]) 0)\n    (clojure.pprint/pprint))&quot;, :offset 70, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (first (seq [{:x 10} {'x 10} {'x 10}]) 0)\n    (clojure.pprint/pprint))&quot;, :offset 10, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (first (seq [{:x 10} {'x 10} {'x 10}]))\n    (clojure.pprint/pprint))&quot;, :offset 42, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (aget (seq [{:x 10} {'x 10} {'x 10}]) 0)\n    (clojure.pprint/pprint))&quot;, :offset 43, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (aget (seq [{:x 10} {'x 10} {'x 10}]) 1)\n    (clojure.pprint/pprint))&quot;, :offset 43, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth (seq [{:x 10} {'x 10} {'x 10}]) 0)\n    (clojure.pprint/pprint))&quot;, :offset 8, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth (seq [{:x 10} {'x 10} {'x 10}]) 0)\n    (fn [x] @(get x :x))\n    (clojure.pprint/pprint))&quot;, :offset 97, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth (seq [{:x 10} {'x 10} {'x 10}]) 0)\n    (#@(get % :x))\n    (clojure.pprint/pprint))&quot;, :offset 57, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth (seq [{:x 10} {'x 10} {'x 10}]) 0)\n    (fn [res] (println res)))&quot;, :offset 72, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [{:x 10} {'x 10} {'x 10}])\n      0)\n    (println))&quot;, :offset 68, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [{:x 10} {'x 10} {'x 10}])\n      0)\n    (get :x))&quot;, :offset 67, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    (get :x))&quot;, :offset 34, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    @(get :x))&quot;, :offset 68, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    (fn [r] @(get r :x)))&quot;, :offset 82, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    ((fn [r] @(get r :x))))&quot;, :offset 68, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    ((fn [n] (#@(get n :x)))))&quot;, :offset 93, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    ((fn [n] (@(get n :x)))))&quot;, :offset 77, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    ((fn [n] @(get n :x))))&quot;, :offset 76, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    ((fn [res] @(get res :x))))&quot;, :offset 94, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    (println \&quot;Found:\&quot;)\n    ((fn [res] @(get res :x))))&quot;, :offset 84, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    (get :x)\n    (println @))&quot;, :offset 90, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    (get :x)\n    (println @%))&quot;, :offset 91, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    (get :x)\n    (#(println @%)))&quot;, :offset 82, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    (get :x)\n    (println))&quot;, :offset 88, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n\n    (println)\n    (get :x))&quot;, :offset 77, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    (get :x)\n    (clojure.pprint/pprint))&quot;, :offset 102, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    (clojure.pprint/pprint))&quot;, :offset 62, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    (clojure.pprint/pprint %&amp;))&quot;, :offset 92, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    (clojure.pprint/pprint ,,))&quot;, :offset 92, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    (get ,, :x)\n    (clojure.pprint/pprint ,,))&quot;, :offset 77, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth\n      (seq [(atom {:x 10}) {'x 10} {'x 10}])\n      0)\n    @(get ,, :x)\n    (clojure.pprint/pprint ,,))&quot;, :offset 68, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth (seq [(atom {:x 10}) {'x 10} {'x 10}]) 0)\n    @(get ,, :x)\n    (clojure.pprint/pprint ,,))&quot;, :offset 67, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth (seq [(atom {:x 10}) {'x 10} {'x 10}]) 0)\n    (#@(get % :x))\n    (clojure.pprint/pprint ,,))&quot;, :offset 57, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth (seq [(atom {:x 10}) {'x 10} {'x 10}]) 0)\n    (#@(get %1 :x))\n    (clojure.pprint/pprint ,,))&quot;, :offset 65, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth (seq [(atom {:x 10}) {'x 10} {'x 10}]) 0)\n    @(get %1 :x)\n    (clojure.pprint/pprint ,,))&quot;, :offset 67, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth (seq [(atom {:x 10}) {'x 10} {'x 10}]) 0)\n    (fn [a] @(get @a :x))\n    (clojure.pprint/pprint ,,))&quot;, :offset 71, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth (seq [(atom {:x 10}) {'x 10} {'x 10}]) 0)\n    ((fn [a] @(get @a :x)))\n    (clojure.pprint/pprint ,,))&quot;, :offset 56, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth (seq [(atom {:x 10}) {'x 10} {'x 10}]) 0)\n    ((fn [a] @(get a :x)))\n    (clojure.pprint/pprint ,,))&quot;, :offset 70, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth (seq [(atom {:x 10}) {'x 10} {'x 10}]) 0)\n    ((fn [a] (do\n               (println a)\n               @(get a :x)))))&quot;, :offset 124, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth (seq [(atom {:x 10}) {'x 10} {'x 10}]) 0)\n    ((fn [a] (do\n               (println (get @a :x))\n               @(get a :x)))))&quot;, :offset 98, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt; (nth (seq [(atom {:x 10}) {'x 10} {'x 10}]) 0)\n    ((fn [a] (get @a :x)))\n    (println))&quot;, :offset 90, :ns &quot;web.domains.game-test&quot;} {:command &quot;(def list (ref [1 2 3 4 \&quot;a\&quot;]))&quot;, :offset 27, :ns &quot;web.domains.game-test&quot;} {:command &quot;(def numeros (ref [1 2 3 4 \&quot;a\&quot;]))&quot;, :offset 12, :ns &quot;web.domains.game-test&quot;} {:command &quot;(dosync)&quot;, :offset 8, :ns &quot;web.domains.game-test&quot;} {:command &quot;(dosync\n  (ref-set numeros [2 4 6 8]))&quot;, :offset 35, :ns &quot;web.domains.game-test&quot;} {:command &quot;(dosync\n  (ref-set numeros [2 4 6 8 10]))&quot;, :offset 41, :ns &quot;web.domains.game-test&quot;} {:command &quot;(dosync\n  (ref-set numeros [2 4 6 8 10 12 14 16 18])\n  (throw (Exception. (str \&quot;Fake news\&quot;))))&quot;, :offset 52, :ns &quot;web.domains.game-test&quot;} {:command &quot;numeros&quot;, :offset 7, :ns &quot;web.domains.game-test&quot;} {:command &quot;(def asd (seq [1 2]))&quot;, :offset 18, :ns &quot;web.domains.game-test&quot;} {:command &quot;asd&quot;, :offset 3, :ns &quot;web.domains.game-test&quot;} {:command &quot;(conj asd \&quot;q\&quot;)&quot;, :offset 12, :ns &quot;web.domains.game-test&quot;} {:command &quot;(concat asd \&quot;q\&quot;)&quot;, :offset 7, :ns &quot;web.domains.game-test&quot;} {:command &quot;(concat asd (seq [\&quot;q\&quot;]))&quot;, :offset 18, :ns &quot;web.domains.game-test&quot;} {:command &quot;(def asd (seq []))&quot;, :offset 16, :ns &quot;web.domains.game-test&quot;} {:command &quot;(concat asd (seq [\&quot;asd\&quot;]))&quot;, :offset 22, :ns &quot;web.domains.game-test&quot;} {:command &quot;(concat asd (seq [\&quot;asd\&quot;]) (seq [\&quot;asd\&quot;]) (seq [\&quot;asd\&quot;]) (seq [\&quot;asd\&quot;]) (seq [\&quot;asd\&quot;]))&quot;, :offset 81, :ns &quot;web.domains.game-test&quot;} {:command &quot;(defn lala (seq []))&quot;, :offset 17, :ns &quot;web.domains.game-test&quot;} {:command &quot;(sequence [])&quot;, :offset 12, :ns &quot;web.domains.game-test&quot;} {:command &quot;(def qq (sequence []))&quot;, :offset 20, :ns &quot;web.domains.game-test&quot;} {:command &quot;(alength qq)&quot;, :offset 11, :ns &quot;web.domains.game-test&quot;} {:command &quot;(alength qq 0)&quot;, :offset 13, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt;&gt; 4\n     (/ 12)\n     (- 5)\n     (* 3)\n     (+ 5)\n     (- 25))&quot;, :offset 64, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt;&gt; 40\n     (/ 12)\n     (- 5)\n     (* 3)\n     (+ 5)\n     (- 25))&quot;, :offset 7, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt;&gt; 10\n     (/ 12)\n     (- 5)\n     (* 3)\n     (+ 5)\n     (- 25))&quot;, :offset 7, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt;&gt; 24\n     (/ 12)\n     (- 5)\n     (* 3)\n     (+ 5)\n     (- 25))&quot;, :offset 7, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt;&gt; 2\n     (/ 12)\n     (- 5)\n     (* 3)\n     (+ 5)\n     (- 25))&quot;, :offset 6, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt;&gt; 1\n     (/ 12)\n     (- 5)\n     (* 3)\n     (+ 5)\n     (- 25))&quot;, :offset 6, :ns &quot;web.domains.game-test&quot;} {:command &quot;(-&gt;&gt; 0\n     (/ 12)\n     (- 5)\n     (* 3)\n     (+ 5)\n     (- 25))&quot;, :offset 6, :ns &quot;web.domains.game-test&quot;} {:command &quot;(defn Agents\n  []\n  (def amount (agent 100))\n  (println @amount)\n\n  (send amount inc)\n  (println 1 @amount)\n  (println 2 @amount)\n  (println 3 @amount)\n\n  (send amount inc)\n  (await-for 1500 amount)\n  (println 4 @amount)\n\n  (println (agent-error amount))\n  )\n\n(Agents)&quot;, :offset 268, :ns &quot;web.domains.game-test&quot;} {:command &quot;(Agents)&quot;, :offset 8, :ns &quot;web.domains.game-test&quot;} {:command &quot;(prn \&quot;What\&quot;)&quot;, :offset 10, :ns &quot;web.domains.game-test&quot;} {:command &quot;(macroexpand (prn \&quot;Ok\&quot;))&quot;, :offset 21, :ns &quot;web.domains.game-test&quot;} {:command &quot;(macroexpand-1 (prn \&quot;Ok\&quot;))&quot;, :offset 14, :ns &quot;web.domains.game-test&quot;} {:command &quot;(macroexpand-1 '(when true (println \&quot;this is true!\&quot;)))&quot;, :offset 54, :ns &quot;web.domains.game-test&quot;} {:command &quot;(macroexpand-1 '(prn \&quot;Ok\&quot;))&quot;, :offset 25, :ns &quot;web.domains.game-test&quot;} {:command &quot;(pr \&quot;ok\&quot;)&quot;, :offset 9, :ns &quot;web.domains.game-test&quot;} {:command &quot;(pr \&quot;ok\&quot;)(pr \&quot;ok\&quot;)(pr \&quot;ok\&quot;)(pr \&quot;ok\&quot;)(pr \&quot;ok\&quot;)&quot;, :offset 45, :ns &quot;web.domains.game-test&quot;} {:command &quot;(do)&quot;, :offset 4, :ns &quot;web.domains.game-test&quot;} {:command &quot;(do\n  (pr \&quot;ok\&quot;)\n  (pr \&quot;ok\&quot;)\n  (pr \&quot;ok\&quot;)\n  (pr \&quot;ok\&quot;)\n  (pr \&quot;ok\&quot;))&quot;, :offset 63, :ns &quot;web.domains.game-test&quot;} {:command &quot;(do\n  (prn \&quot;OK\&quot;)\n  (prn \&quot;OK\&quot;)\n  (prn \&quot;OK\&quot;)\n  (prn \&quot;OK\&quot;)\n  (prn \&quot;OK\&quot;)\n  (prn \&quot;OK\&quot;))&quot;, :offset 81, :ns &quot;web.domains.game-test&quot;} {:command &quot;(reduce (str) [\&quot;oi\&quot; \&quot;, mundo\&quot;])&quot;, :offset 30, :ns &quot;web.core&quot;} {:command &quot;(reduce #(cons %2 %1) [1 2 3] [4 5 6])&quot;, :offset 38, :ns &quot;web.core&quot;} {:command &quot;(reduce #(cons %2 %1) \&quot;\&quot; [\&quot;olá \&quot; \&quot;, mundo \&quot; \&quot;!!!\&quot;])&quot;, :offset 48, :ns &quot;web.core&quot;} {:command &quot;(reduce #(cons %1) \&quot;\&quot; [\&quot;olá \&quot; \&quot;, mundo \&quot; \&quot;!!!\&quot;])&quot;, :offset 17, :ns &quot;web.core&quot;} {:command &quot;(reduce #(cons %1 %2) \&quot;\&quot; [\&quot;olá \&quot; \&quot;, mundo \&quot; \&quot;!!!\&quot;])&quot;, :offset 20, :ns &quot;web.core&quot;} {:command &quot;(reduce #(str %1) \&quot;\&quot; [\&quot;olá \&quot; \&quot;, mundo \&quot; \&quot;!!!\&quot;])&quot;, :offset 16, :ns &quot;web.core&quot;} {:command &quot;(reduce #(str %1 %2) \&quot;\&quot; [\&quot;olá \&quot; \&quot;, mundo \&quot; \&quot;!!!\&quot;])&quot;, :offset 19, :ns &quot;web.core&quot;} {:command &quot;(prn \&quot;asd\nasd\nasd\nasd\nasd\n\&quot;)&quot;, :offset 26, :ns &quot;web.domains.game-test&quot;} {:command &quot;(pprint \&quot;asd\nasd\nasd\nasd\nasd\n\&quot;)&quot;, :offset 29, :ns &quot;web.domains.game-test&quot;} {:command &quot;(pprint (format \&quot;asd\nasd\nasd\nasd\nasd\n\&quot;))&quot;, :offset 16, :ns &quot;web.domains.game-test&quot;} {:command &quot;(pprint (str \&quot;asd\nasd\nasd\nasd\nasd\n\&quot;))&quot;, :offset 12, :ns &quot;web.domains.game-test&quot;} {:command &quot;(macroexpand-1 '(-&gt; 50\n                    (or)\n                    (= 49)\n                    (= 0)))&quot;, :offset 22, :ns &quot;web.domains.game-test&quot;} {:command &quot;(macroexpand-1 '(-&gt; 50\n                    (= 49)\n                    (= 0)\n                    (or)))&quot;, :offset 75, :ns &quot;web.domains.game-test&quot;} {:command &quot;(macroexpand-1 '(-&gt; 123\n                    (= 49)\n                    (or)\n                    (= 0)))&quot;, :offset 101, :ns &quot;web.domains.game-test&quot;} {:command &quot;(macroexpand-1 '(-&gt;&gt; 123\n                    (= ,, 49)\n                    (= ,, 0)\n                    (or)))&quot;, :offset 20, :ns &quot;web.domains.game-test&quot;} {:command &quot;(def x [1 2 3 4 5 6])&quot;, :offset 19, :ns &quot;web.domains.game-test&quot;} {:command &quot;(remove #(= 3 %) x)&quot;, :offset 19, :ns &quot;web.domains.game-test&quot;} {:command &quot;x&quot;, :offset 1, :ns &quot;web.domains.game-test&quot;} {:command &quot;(remove #(= 7 %) x)&quot;, :offset 13, :ns &quot;web.domains.game-test&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Clojure REPL.webREPL">
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="web" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
      <method v="2" />
    </configuration>
    <configuration name="webREPL" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="web" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration name="web.domains.grid-test" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <module name="web" />
      <setting name="path" value="$PROJECT_DIR$/test/web/domains/grid_test.clj" />
      <setting name="namespace" value="" />
      <setting name="execution" value="INTELLIJ" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="$PROJECT_DIR$/test/web/domains" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure Application.web.domains.grid-test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c0216f18-1922-4403-85bd-91a9701dcb43" name="Default Changelist" comment="" />
      <created>1565147876333</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1565147876333</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>